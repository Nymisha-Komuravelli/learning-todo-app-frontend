{"version":3,"sources":["components/History.jsx","components/AddTodo.jsx","components/TodoList.jsx","components/Home.jsx","components/Trash.jsx","components/TodoApp.js","components/AuthContext.jsx","components/Login.jsx","components/PrivateRoute.jsx","components/Signup.jsx","components/PrivateRouteLogin.jsx","components/PrivateRouteSignup.jsx","App.js","reportWebVitals.js","index.js"],"names":["History","useContext","TodoContext","historylog","backtoHome","useHistory","useState","revLog","setRevLog","useEffect","reverse","direction","style","width","marginTop","map","item","index","className","align","color","onClick","ArrowLeftOutlined","AddTodo","props","Form","useForm","form","handleTodo","span","name","layout","onFinish","values","resetFields","gutter","xs","order","sm","md","lg","Item","label","xl","xxl","rows","offset","htmlType","TodoList","todoList","handleDelete","handleComplete","todo","justify","isComplete","taskName","taskDesc","id","hidden","icon","faCheckDouble","DeleteFilled","Home","Trash","deletedTodoList","handleRestore","handlePermanentDelete","console","log","RollbackOutlined","createContext","TodoApp","JSON","parse","localStorage","getItem","setTodoList","setDeletedTodoList","current","setCurrent","setHistoryLog","history","navigationList","key","path","Provider","value","Date","now","newTodoList","setItem","stringify","toLocaleString","deletedTodo","filter","selectedindex","findIndex","push","e","selectedKey","menu","selectedKeys","mode","marginLeft","exact","AuthContext","Login","usersList","handleAuth","openNotification","notification","message","user","username","password","length","setTimeout","PrivateRoute","Component","component","authorized","rest","render","to","Signup","setUsersList","openNotificationwithIcon","type","description","newUsersList","PrivateRouteLogin","isLoggedIn","PrivateRouteSignup","App","setAuthorized","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96e1619b.chunk.js","sourcesContent":["import {\r\n  ArrowLeftOutlined\r\n} from \"@ant-design/icons\";\r\nimport { Button, Col, Row, Space } from \"antd\";\r\nimport { TodoContext } from \"./TodoApp\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nconst History = () => {\r\n  const [\r\n    todoList,\r\n    handleTodo,\r\n    handleDelete,\r\n    handleComplete,\r\n    deletedTodoList,\r\n    handleRestore,\r\n    handlePermanentDelete,\r\n    historylog,\r\n    backtoHome\r\n  ] = useContext(TodoContext);\r\n  const history = useHistory();\r\n  const [revLog, setRevLog] = useState([]);\r\n\r\n   /**\r\n   *\r\n   * To Reverse the events in log, so that latest events are displayed at the top\r\n   */\r\n  useEffect(() => {\r\n    setRevLog(historylog.reverse());\r\n  }, [historylog]);\r\n\r\n  return (\r\n    <>\r\n      <Space direction=\"vertical\" style={{ width: \"100%\", marginTop: \"10px\" }}>\r\n        {revLog?.map((item, index) => (\r\n          <div className=\"todo-item\" key={index}>\r\n            <Row align=\"middle\">\r\n              <Col>\r\n                <span style={{ color: \"white\" }}>{item}</span>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n        <Button className=\"icon-red\" onClick={backtoHome}>\r\n          <ArrowLeftOutlined /> Back to Home\r\n        </Button>\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Col, Form, Input, Row } from \"antd\";\r\nimport Button from \"antd/es/button\";\r\nimport TextArea from \"rc-textarea\";\r\nimport { TodoContext } from \"./TodoApp\";\r\n\r\nconst AddTodo = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [\r\n    todoList,\r\n    handleTodo,\r\n    handleDelete,\r\n    handleComplete,\r\n    deletedTodoList,\r\n    handleRestore,\r\n    handlePermanentDelete,\r\n    historylog,\r\n    backtoHome,\r\n  ] = useContext(TodoContext);\r\n\r\n  /**\r\n   *\r\n   * Method to receive new todoitem values from the form and passes them on to the parent TodoApp Component.\r\n   * Param received from Add todo form\r\n   */\r\n  const handleAdd = (values) => {\r\n    handleTodo(values);\r\n    form.resetFields();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row className=\"add-todo-container\">\r\n        <Col span={24}>\r\n          <Form\r\n            name=\"form\"\r\n            form={form}\r\n            layout=\"vertical\"\r\n            className=\"add-todo-form\"\r\n            onFinish={handleAdd}\r\n          >\r\n            <Row align=\"bottom\" gutter={[8, 16]}>\r\n              <Col\r\n                xs={{ span: 24, order: 2 }}\r\n                sm={{ span: 24, order: 2 }}\r\n                md={{ span: 24, order: 2 }}\r\n                lg={{ span: 6, order: 1 }}\r\n              >\r\n                <Form.Item label=\"Enter Task Name\" name=\"taskName\">\r\n                  <Input className=\"text-box\"></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                xs={{ span: 24, order: 3 }}\r\n                sm={{ span: 24, order: 3 }}\r\n                md={{ span: 24, order: 3 }}\r\n                lg={{ span: 0 }}\r\n                xl={{ span: 0 }}\r\n                xxl={{ span: 0 }}\r\n              >\r\n                <Form.Item label=\"Enter Task description\" name=\"taskDesc\">\r\n                  <TextArea className=\"text-box\" rows={4}></TextArea>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                lg={{ span: 12, order: 2, offset: 1 }}\r\n                xs={{ span: 0 }}\r\n                sm={{ span: 0 }}\r\n                md={{ span: 0 }}\r\n              >\r\n                <Form.Item label=\"Enter Task description\" name=\"taskDesc\">\r\n                  <Input className=\"text-box\"></Input>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col\r\n                xs={{ span: 24, order: 1 }}\r\n                sm={{ span: 24, order: 1 }}\r\n                md={{ span: 24, order: 1 }}\r\n                lg={{ span: 3, order: 3, offset: 1 }}\r\n              >\r\n                <Form.Item>\r\n                  <Button htmlType=\"submit\" className=\"add-btn\">\r\n                    ADD\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import { DeleteFilled } from \"@ant-design/icons\";\r\nimport { faCheckDouble } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Col, Row } from \"antd\";\r\nimport { TodoContext } from \"./TodoApp\";\r\nimport React, { useContext } from \"react\";\r\n\r\nconst TodoList = (props) => {\r\n  const [\r\n    todoList,\r\n    handleTodo,\r\n    handleDelete,\r\n    handleComplete,\r\n    deletedTodoList,\r\n    handleRestore,\r\n    handlePermanentDelete,\r\n    historylog,\r\n    backtoHome,\r\n  ] = useContext(TodoContext);\r\n\r\n  return (\r\n    <>\r\n      {todoList?.map((todo) => (\r\n        <div className=\"todo-item\" key={todo.id}>\r\n          <Row align=\"middle\">\r\n            <Col xs={20} sm={20} md={20} lg={18} xl={18} xxl={20}>\r\n              <Row justify=\"start\">\r\n                <Col>\r\n                  <h3\r\n                    className={\r\n                      todo.isComplete\r\n                        ? \"complete-todo-title item-title\"\r\n                        : \"item-title\"\r\n                    }\r\n                  >\r\n                    {todo?.taskName}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row justify=\"start\">\r\n                <Col>\r\n                  <span\r\n                    className={\r\n                      todo.isComplete\r\n                        ? \"complete-todo-desc item-desc\"\r\n                        : \"item-desc\"\r\n                    }\r\n                  >\r\n                    {todo?.taskDesc}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={4} lg={6} xl={6} xxl={4}>\r\n              <Row gutter={[8, 8]} justify=\"end\">\r\n                <Col>\r\n                  <Button\r\n                    className=\"icon-red\"\r\n                    onClick={() => handleComplete(todo.id)}\r\n                    hidden={todo.isComplete}\r\n                  >\r\n                    <FontAwesomeIcon icon={faCheckDouble} />\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\"icon-red\"\r\n                    onClick={() => handleDelete(todo.id)}\r\n                  >\r\n                    <DeleteFilled />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { TodoContext } from \"./TodoApp\";\r\nimport React, { useContext } from \"react\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nconst Home = () => {\r\n  const [\r\n    todoList,\r\n    handleTodo,\r\n    handleDelete,\r\n    handleComplete,\r\n    deletedTodoList,\r\n    handleRestore,\r\n    handlePermanentDelete,\r\n    historylog,\r\n    backtoHome,\r\n  ] = useContext(TodoContext);\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <AddTodo />\r\n        <TodoList />\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { DeleteFilled, RollbackOutlined } from \"@ant-design/icons\";\r\nimport { Button, Col, Row } from \"antd\";\r\nimport { TodoContext } from \"./TodoApp\";\r\nimport React, { useContext, useEffect } from \"react\";\r\n\r\nconst Trash = () => {\r\n  \r\n  const [\r\n    todoList,\r\n    handleTodo,\r\n    handleDelete,\r\n    handleComplete,\r\n    deletedTodoList,\r\n    handleRestore,\r\n    handlePermanentDelete,\r\n    historylog,\r\n    backtoHome,\r\n  ] = useContext(TodoContext);\r\n\r\n  useEffect(()=>{\r\n    console.log(\"trash\");\r\n  },[])\r\n  return (\r\n    <>\r\n      {deletedTodoList?.map((todo) => (\r\n        <div className=\"todo-item\" key={todo.id}>\r\n          <Row align=\"middle\">\r\n            <Col xs={20} sm={20} md={20} lg={18} xl={18} xxl={20}>\r\n              <Row justify=\"start\">\r\n                <Col>\r\n                  <h3\r\n                    className={\r\n                      todo.isComplete\r\n                        ? \"complete-todo-title item-title\"\r\n                        : \"item-title\"\r\n                    }\r\n                  >\r\n                    {todo?.taskName}\r\n                  </h3>\r\n                </Col>\r\n              </Row>\r\n              <Row justify=\"start\">\r\n                <Col>\r\n                  <span\r\n                    className={\r\n                      todo.isComplete\r\n                        ? \"complete-todo-desc item-desc\"\r\n                        : \"item-desc\"\r\n                    }\r\n                  >\r\n                    {todo?.taskDesc}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col xs={4} sm={4} md={4} lg={6} xl={6} xxl={4}>\r\n              <Row gutter={[8, 8]} justify=\"end\">\r\n                <Col>\r\n                  <Button\r\n                    className=\"icon-red\"\r\n                    onClick={() => handleRestore(todo)}\r\n                  >\r\n                    <RollbackOutlined />\r\n                  </Button>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\"icon-red\"\r\n                    onClick={() => handlePermanentDelete(todo)}\r\n                  >\r\n                    <DeleteFilled />\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trash;\r\n","import { Button, Col, Menu, Row } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport History from \"./History\";\r\nimport Home from \"./Home\";\r\nimport Trash from \"./Trash\";\r\n\r\nexport const TodoContext = createContext([]);\r\n\r\nconst TodoApp = () => {\r\n  const [todoList, setTodoList] = useState(\r\n    JSON.parse(localStorage.getItem(\"todoList\")) || []\r\n  );\r\n  const [deletedTodoList, setDeletedTodoList] = useState([]);\r\n  const [current, setCurrent] = useState(\"A\");\r\n  const [historylog, setHistoryLog] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  /**\r\n   *\r\n   * Method to add new todoitem to the existing todolist stored in localstorage and adding the event to log.\r\n   * Param received from AddTodo Component\r\n   */\r\n  const handleTodo = (value) => {\r\n    let id = Date.now();\r\n    let newTodoList = [...todoList, { ...value, id: id, isComplete: false }];\r\n    setTodoList(newTodoList);\r\n    localStorage.setItem(\"todoList\", JSON.stringify(newTodoList));\r\n    setHistoryLog([\r\n      ...historylog,\r\n      `Added new item on ${new Date().toLocaleString()}`,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to delete a particular todoitem from the existing todolist and adding the event to log.\r\n   * Param received from TodoList Component\r\n   */\r\n  const handleDelete = (id) => {\r\n    let deletedTodo = todoList.filter((todo) => todo.id == id);\r\n    setDeletedTodoList([...deletedTodoList, deletedTodo[0]]);\r\n    let newTodoList = todoList.filter((todo) => todo.id != id);\r\n    setTodoList(newTodoList);\r\n    localStorage.setItem(\"todoList\", JSON.stringify(newTodoList));\r\n    setHistoryLog([\r\n      ...historylog,\r\n      `Deleted item with id ${id} on ${new Date().toLocaleString()}`,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to mark a particular todoitem as complete from the existing todolist and adding the event to log.\r\n   * Param received from TodoList Component\r\n   */\r\n  const handleComplete = (id) => {\r\n    let selectedindex = todoList.findIndex((todo) => todo.id == id);\r\n    let newTodoList = [...todoList];\r\n    newTodoList[selectedindex] = {\r\n      ...newTodoList[selectedindex],\r\n      isComplete: !newTodoList[selectedindex].isComplete,\r\n    };\r\n    setTodoList(newTodoList);\r\n    localStorage.setItem(\"todoList\", JSON.stringify(newTodoList));\r\n    setHistoryLog([\r\n      ...historylog,\r\n      `Marked item with id ${id} as completed on ${new Date().toLocaleString()}`,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to restore a deleted todoitem from the trash page and adding the event to log.\r\n   * Param received from Trash Component\r\n   */\r\n  const handleRestore = (item) => {\r\n    let newTodoList = deletedTodoList.filter((todo) => todo.id != item.id);\r\n    setDeletedTodoList(newTodoList);\r\n    setTodoList([...todoList, item]);\r\n    localStorage.setItem(\"todoList\", JSON.stringify([...todoList, item]));\r\n    setHistoryLog([\r\n      ...historylog,\r\n      `Restored item with id ${item.id} on ${new Date().toLocaleString()}`,\r\n    ]);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to do permanent delete of a todoitem from the trash page.\r\n   * Param received from Trash Component\r\n   */\r\n  const handlePermanentDelete = (item) => {\r\n    let newTodoList = deletedTodoList.filter((todo) => todo.id != item.id);\r\n    setDeletedTodoList(newTodoList);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to navigate to the selected page and display it as current page in the UI\r\n   */\r\n  const handleClick = (e) => {\r\n    let selectedKey = e.key;\r\n    setCurrent(selectedKey);\r\n    console.log(navigationList.filter((menu) => menu.key == selectedKey)[0].path);\r\n    history.push(\r\n      navigationList.filter((menu) => menu.key == selectedKey)[0].path\r\n    );\r\n    if (selectedKey == \"D\") {\r\n      localStorage.setItem(\"isLoggedIn\", \"false\");\r\n      localStorage.setItem(\"authorized\", \"false\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * Method to navigate to Home page from the History page.\r\n   */\r\n  const backtoHome = () => {\r\n    history.push(\"/\");\r\n    setCurrent(\"A\");\r\n  };\r\n\r\n  const navigationList = [\r\n    { key: \"A\", path: \"/\" },\r\n    { key: \"B\", path: \"/trash\" },\r\n    { key: \"C\", path: \"/history\" },\r\n    { key: \"D\", path: \"/login\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app-title\">TO DO</div>\r\n      <Row className=\"page-center\">\r\n        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 10, offset: 7 }}>\r\n          <TodoContext.Provider\r\n            value={[\r\n              todoList,\r\n              handleTodo,\r\n              handleDelete,\r\n              handleComplete,\r\n              deletedTodoList,\r\n              handleRestore,\r\n              handlePermanentDelete,\r\n              historylog,\r\n              backtoHome,\r\n            ]}\r\n          >\r\n            <Menu\r\n              onClick={handleClick}\r\n              selectedKeys={[current]}\r\n              mode=\"horizontal\"\r\n            >\r\n              <Menu.Item key=\"A\">Home</Menu.Item>\r\n              <Menu.Item key=\"B\">Trash</Menu.Item>\r\n              <Menu.Item key=\"C\">History</Menu.Item>\r\n              <Menu.Item\r\n                key=\"D\"\r\n                style={{ marginLeft: \"auto\" }}\r\n                className=\"logout-button\"\r\n              >\r\n                <Button>Logout</Button>\r\n              </Menu.Item>\r\n            </Menu>\r\n            <Switch>\r\n              <Route exact path=\"/\" >\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/trash\" >\r\n                <Trash />\r\n              </Route>\r\n              <Route exact path=\"/history\" >\r\n                <History />\r\n              </Route>\r\n            </Switch>\r\n          </TodoContext.Provider>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext([]);","import { Button, Col, Form, Input, notification, Row } from \"antd\";\r\nimport React, { Fragment, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nconst Login = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const [usersList, setUsersList] = useState(\r\n    JSON.parse(localStorage.getItem(\"usersList\")) || []\r\n  );\r\n  const [authorized, handleAuth] = useContext(AuthContext);\r\n  /**\r\n   *\r\n   * Method to validate User Credentials entered in the form with the details stored in localstorage.\r\n   * It navigates to Home Page if login is succesful. Else it remains in the Login page and throws an error notification.\r\n   */\r\n  const handleLogin = (values) => {\r\n    let user = usersList?.filter(\r\n      (user) =>\r\n        user.username == values.username && user.password == values.password\r\n    );\r\n    if (user?.length > 0) {\r\n      setTimeout(() => {\r\n        console.log(\"handlelogin\");\r\n        localStorage.setItem(\"isLoggedIn\", \"true\");\r\n        handleAuth(true);\r\n        history.push(\"/\");\r\n      }, 1000);\r\n    } else {\r\n      openNotification();\r\n    }\r\n  };\r\n  const openNotification = () => {\r\n    notification[\"error\"]({\r\n      message: \"Login Failed\",\r\n    });\r\n  };\r\n\r\n  /**\r\n   * To check whether the user is already logged in and redirect to home page if logged in.\r\n   * Else will redirect to login page\r\n   */\r\n  /* useEffect(()=>{\r\n    if(localStorage.getItem(\"isLoggedIn\") == \"true\"){\r\n      handleAuth(true);\r\n      history.push(\"/\");\r\n    }\r\n  },[]) */\r\n\r\n  /**\r\n   *\r\n   * Method to navigate to the signup page.\r\n   */\r\n  const handleSignup = (values) => {\r\n    history.push(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col\r\n            xs={{ span: 20 }}\r\n            sm={{ span: 16 }}\r\n            md={{ span: 16 }}\r\n            lg={{ span: 8 }}\r\n            xl={{ span: 6 }}\r\n            className=\"add-todo-container\"\r\n          >\r\n            <Form\r\n              name=\"form\"\r\n              form={form}\r\n              layout=\"vertical\"\r\n              className=\"add-todo-form\"\r\n              onFinish={handleLogin}\r\n            >\r\n              <Row align=\"top\" gutter={[8, 16]}>\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Username\" name=\"username\">\r\n                    <Input className=\"text-box\"></Input>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Password\" name=\"password\">\r\n                    <Input className=\"text-box\"></Input>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item>\r\n                    <Button htmlType=\"submit\" className=\"add-btn\">\r\n                      Login\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item>\r\n                    <Button onClick={handleSignup} className=\"add-btn\">\r\n                      Signup\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\n/**\r\n *\r\n * Private Route to make the application to be accessible only when the user is authorized.\r\n * User navigates to the TodoApp component when  authorized.\r\n */\r\nconst PrivateRoute = ({ component: Component, authorized, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return (authorized && (localStorage.getItem(\"isLoggedIn\") == \"true\")) ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Button, Col, Form, Input, notification, Row } from \"antd\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const [usersList, setUsersList] = useState(\r\n    JSON.parse(localStorage.getItem(\"usersList\")) || []\r\n  );\r\n\r\n   /**\r\n   *\r\n   * Method to validate if the User Credentials entered in the form are not empty.\r\n   * If valid, credentials are added to the localstorage. Else, it remains in the same page.\r\n   * Notifications are thrown in both the cases.\r\n   */\r\n  const handleSignup = (values) => {\r\n    if (values.username && values.password) {\r\n      let newUsersList = [...usersList, { username: values.username, password: values.password }];\r\n      setUsersList(newUsersList);\r\n      localStorage.setItem(\"usersList\", JSON.stringify(newUsersList));\r\n      openNotificationwithIcon(\"success\");\r\n      setTimeout(() => {\r\n        history.push(\"/login\");\r\n      }, 3000);\r\n    } else {\r\n      openNotificationwithIcon(\"error\");\r\n    }\r\n  };\r\n  const openNotificationwithIcon = (type) => {\r\n    type==\"success\" && notification[\"success\"]({\r\n      message: \"Signup successful\",\r\n      description: \"You will be redirected to Login Page\"\r\n    });\r\n    type==\"error\" && notification[\"error\"]({\r\n      message: \"Signup Failed\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col\r\n            xs={{ span: 20 }}\r\n            sm={{ span: 16 }}\r\n            md={{ span: 16 }}\r\n            lg={{ span: 8 }}\r\n            xl={{ span: 6 }}\r\n            className=\"add-todo-container\"\r\n          >\r\n            <Form\r\n              name=\"form\"\r\n              form={form}\r\n              layout=\"vertical\"\r\n              className=\"add-todo-form\"\r\n              onFinish={handleSignup}\r\n            >\r\n              <Row align=\"top\" gutter={[8, 16]}>\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Username\" name=\"username\">\r\n                    <Input className=\"text-box\"></Input>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Password\" name=\"password\">\r\n                    <Input className=\"text-box\"></Input>\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form.Item>\r\n                    <Button htmlType=\"submit\" className=\"add-btn\">\r\n                      Signup\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\n/**\r\n *\r\n * Private Route to make the application to be accessible only when the user is authorized.\r\n * User navigates to the TodoApp component when  authorized.\r\n */\r\nconst PrivateRouteLogin = ({ component: Component, ...rest }) => {\r\n  const [authorized, handleAuth] = useContext(AuthContext);\r\n  const [isLoggedIn, setIsLoggedin] = useState(\r\n    JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false\r\n  );\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return authorized && isLoggedIn ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} {...rest} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRouteLogin;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\n/**\r\n *\r\n * Private Route to make the application to be accessible only when the user is authorized.\r\n * User navigates to the TodoApp component when  authorized.\r\n */\r\nconst PrivateRouteSignup = ({ component: Component, ...rest }) => {\r\n  const [authorized, handleAuth] = useContext(AuthContext);\r\n  const [isLoggedIn, setIsLoggedin] = useState(\r\n    JSON.parse(localStorage.getItem(\"isLoggedIn\")) || false\r\n  );\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return authorized && isLoggedIn ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} {...rest} />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRouteSignup;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Row, Col, Menu, Button } from \"antd\";\r\nimport TodoApp from \"components/TodoApp\";\r\nimport Login from \"components/Login\";\r\nimport PrivateRoute from \"components/PrivateRoute\";\r\nimport Signup from \"components/Signup\";\r\nimport PrivateRouteLogin from \"components/PrivateRouteLogin\";\r\nimport PrivateRouteSignup from \"components/PrivateRouteSignup\";\r\nimport { AuthContext } from \"components/AuthContext\";\r\n\r\nfunction App() {\r\n  const [authorized, setAuthorized] = useState(\r\n    JSON.parse(localStorage.getItem(\"authorized\")) || false\r\n  );\r\n\r\n  /**\r\n   *\r\n   * Passing on authorized prop received from Login Page to Home Page.\r\n   */\r\n  const handleAuth = (authorized) => {\r\n    setAuthorized(authorized);\r\n    localStorage.setItem(\"authorized\", \"true\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <AuthContext.Provider value={[authorized, handleAuth]}>\r\n        <Row style={{ height: \"100vh\" }}>\r\n          <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }}>\r\n            <Switch>\r\n              <PrivateRouteLogin\r\n                path=\"/login\"\r\n                component={Login}\r\n                exact\r\n              />\r\n              <PrivateRouteSignup\r\n                path=\"/signup\"\r\n                component={Signup}\r\n                exact\r\n              />\r\n              <PrivateRoute\r\n                component={TodoApp}\r\n                authorized={authorized}\r\n              />\r\n            </Switch>\r\n          </Col>\r\n        </Row>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"antd/dist/antd.css\"; \r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}